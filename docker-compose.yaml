services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 2s
      timeout: 5s
      retries: 15
    ports:
      - "5432:${POSTGRES_PORT}"
    volumes:
      - backend-data:/var/lib/postgresql/data

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ".env"
    restart: always
    depends_on:
      - postgres
      - qdrant
    extra_hosts:
      - "host.docker.internal:host-gateway"

  qdrant:
    image: qdrant/qdrant:gpu-nvidia-latest
    container_name: qdrant
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    ports:
      - "6333:${QDRANT_PORT}"  # REST API
      - "6334:6334"            # gRPC
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HOST=0.0.0.0
      - QDRANT__SERVICE__HTTP_PORT=${QDRANT_PORT}
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
      - QDRANT__GPU__INDEXING=1        # включает GPU-индексацию
    runtime: nvidia
    env_file:
      - ".env"

volumes:
  backend-data:
  qdrant-data:
  ollama-data:

